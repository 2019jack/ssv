// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msgs.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgType int32

const (
	MsgType_Preprepare     MsgType = 0
	MsgType_Prepare        MsgType = 1
	MsgType_CreatePool     MsgType = 2
	MsgType_CreateOperator MsgType = 3
)

var MsgType_name = map[int32]string{
	0: "Preprepare",
	1: "Prepare",
	2: "CreatePool",
	3: "CreateOperator",
}

var MsgType_value = map[string]int32{
	"Preprepare":     0,
	"Prepare":        1,
	"CreatePool":     2,
	"CreateOperator": 3,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}

func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_952909143bb80d72, []int{0}
}

type IBFTMessage struct {
	Type           MsgType `protobuf:"varint,10,opt,name=type,proto3,enum=ibft.v1alpha.MsgType" json:"type,omitempty"`
	BeaconDutySlot uint64  `protobuf:"varint,20,opt,name=beacon_duty_slot,json=beaconDutySlot,proto3" json:"beacon_duty_slot,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*IBFTMessage_AttestationData
	//	*IBFTMessage_BeaconBlock
	Data                 isIBFTMessage_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *IBFTMessage) Reset()         { *m = IBFTMessage{} }
func (m *IBFTMessage) String() string { return proto.CompactTextString(m) }
func (*IBFTMessage) ProtoMessage()    {}
func (*IBFTMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_952909143bb80d72, []int{0}
}

func (m *IBFTMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IBFTMessage.Unmarshal(m, b)
}
func (m *IBFTMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IBFTMessage.Marshal(b, m, deterministic)
}
func (m *IBFTMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IBFTMessage.Merge(m, src)
}
func (m *IBFTMessage) XXX_Size() int {
	return xxx_messageInfo_IBFTMessage.Size(m)
}
func (m *IBFTMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_IBFTMessage.DiscardUnknown(m)
}

var xxx_messageInfo_IBFTMessage proto.InternalMessageInfo

func (m *IBFTMessage) GetType() MsgType {
	if m != nil {
		return m.Type
	}
	return MsgType_Preprepare
}

func (m *IBFTMessage) GetBeaconDutySlot() uint64 {
	if m != nil {
		return m.BeaconDutySlot
	}
	return 0
}

type isIBFTMessage_Data interface {
	isIBFTMessage_Data()
}

type IBFTMessage_AttestationData struct {
	AttestationData *v1alpha1.AttestationData `protobuf:"bytes,30,opt,name=attestation_data,json=attestationData,proto3,oneof"`
}

type IBFTMessage_BeaconBlock struct {
	BeaconBlock *v1alpha1.BeaconBlock `protobuf:"bytes,31,opt,name=beacon_block,json=beaconBlock,proto3,oneof"`
}

func (*IBFTMessage_AttestationData) isIBFTMessage_Data() {}

func (*IBFTMessage_BeaconBlock) isIBFTMessage_Data() {}

func (m *IBFTMessage) GetData() isIBFTMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *IBFTMessage) GetAttestationData() *v1alpha1.AttestationData {
	if x, ok := m.GetData().(*IBFTMessage_AttestationData); ok {
		return x.AttestationData
	}
	return nil
}

func (m *IBFTMessage) GetBeaconBlock() *v1alpha1.BeaconBlock {
	if x, ok := m.GetData().(*IBFTMessage_BeaconBlock); ok {
		return x.BeaconBlock
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*IBFTMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*IBFTMessage_AttestationData)(nil),
		(*IBFTMessage_BeaconBlock)(nil),
	}
}

func init() {
	proto.RegisterEnum("ibft.v1alpha.MsgType", MsgType_name, MsgType_value)
	proto.RegisterType((*IBFTMessage)(nil), "ibft.v1alpha.iBFTMessage")
}

func init() {
	proto.RegisterFile("msgs.proto", fileDescriptor_952909143bb80d72)
}

var fileDescriptor_952909143bb80d72 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xdf, 0x6a, 0xe2, 0x40,
	0x14, 0xc6, 0x8d, 0x2b, 0x0a, 0x13, 0xc9, 0x86, 0x61, 0x17, 0x82, 0x17, 0xea, 0xba, 0xb0, 0x64,
	0x7b, 0x91, 0xa0, 0x7d, 0x82, 0xa6, 0xd2, 0x4a, 0x41, 0x2a, 0xd1, 0xab, 0xde, 0xc8, 0x89, 0x9e,
	0x26, 0xa1, 0xd1, 0x19, 0x66, 0x4e, 0xa4, 0x79, 0x83, 0x3e, 0x76, 0xc9, 0x9f, 0xa2, 0x5e, 0xf4,
	0x6e, 0xbe, 0x73, 0x7e, 0x7c, 0xe7, 0x9c, 0x6f, 0x18, 0x3b, 0xe8, 0x58, 0x7b, 0x52, 0x09, 0x12,
	0xbc, 0x9f, 0x46, 0xaf, 0xe4, 0x9d, 0xa6, 0x90, 0xc9, 0x04, 0x06, 0x43, 0xa4, 0xc4, 0x6f, 0xc4,
	0xd4, 0x07, 0x22, 0xd4, 0x04, 0x94, 0x8a, 0x63, 0x4d, 0x0f, 0x46, 0x57, 0xfd, 0x08, 0x61, 0x27,
	0x8e, 0xdb, 0x28, 0x13, 0xbb, 0xb7, 0x1a, 0x98, 0x7c, 0xb4, 0x99, 0x99, 0x06, 0x0f, 0x9b, 0x25,
	0x6a, 0x0d, 0x31, 0xf2, 0xff, 0xac, 0x43, 0x85, 0x44, 0x87, 0x8d, 0x0d, 0xd7, 0x9a, 0xfd, 0xf6,
	0x2e, 0xa7, 0x79, 0x4b, 0x1d, 0x6f, 0x0a, 0x89, 0x61, 0x85, 0x70, 0x97, 0xd9, 0x8d, 0xe1, 0x3e,
	0xa7, 0x62, 0xab, 0x33, 0x41, 0xce, 0xaf, 0xb1, 0xe1, 0x76, 0x42, 0xab, 0xae, 0xcf, 0x73, 0x2a,
	0xd6, 0x99, 0x20, 0xbe, 0x66, 0xf6, 0xc5, 0x6a, 0xdb, 0x3d, 0x10, 0x38, 0xc3, 0xb1, 0xe1, 0x9a,
	0xb3, 0x7f, 0x1e, 0x52, 0x82, 0x0a, 0xf3, 0x43, 0xf9, 0xf8, 0x1a, 0x34, 0xf5, 0xee, 0xce, 0xf8,
	0x1c, 0x08, 0x16, 0xad, 0xf0, 0x27, 0x5c, 0x97, 0xf8, 0x23, 0xeb, 0x5f, 0xde, 0xe3, 0x8c, 0x2a,
	0xc3, 0xc9, 0x37, 0x86, 0x41, 0x85, 0x06, 0x25, 0xb9, 0x68, 0x85, 0x66, 0x74, 0x96, 0x41, 0x97,
	0x75, 0xca, 0x8d, 0x6e, 0x9e, 0x58, 0xaf, 0x39, 0x90, 0x5b, 0x8c, 0xad, 0x14, 0x4a, 0x85, 0x12,
	0x14, 0xda, 0x2d, 0x6e, 0xb2, 0xde, 0xaa, 0x11, 0x46, 0xd9, 0xbc, 0x57, 0x08, 0x84, 0x2b, 0x21,
	0x32, 0xbb, 0xcd, 0x39, 0xb3, 0x6a, 0xfd, 0x2c, 0x51, 0x01, 0x09, 0x65, 0xff, 0x08, 0xfe, 0xbe,
	0xfc, 0x89, 0x53, 0x4a, 0xf2, 0xc8, 0xdb, 0x89, 0x83, 0x1f, 0x65, 0xe2, 0x1d, 0xa4, 0xf4, 0xb5,
	0x3e, 0xf9, 0x65, 0xa0, 0x7e, 0x99, 0x9f, 0x8e, 0xba, 0xd5, 0x17, 0xdc, 0x7e, 0x06, 0x00, 0x00,
	0xff, 0xff, 0xf7, 0x9b, 0xfe, 0x9b, 0xdf, 0x01, 0x00, 0x00,
}

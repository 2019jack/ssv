// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msgs.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgType int32

const (
	MsgType_Preprepare  MsgType = 0
	MsgType_Prepare     MsgType = 1
	MsgType_Commit      MsgType = 2
	MsgType_RoundChange MsgType = 3
	MsgType_Decide      MsgType = 4
)

var MsgType_name = map[int32]string{
	0: "Preprepare",
	1: "Prepare",
	2: "Commit",
	3: "RoundChange",
	4: "Decide",
}

var MsgType_value = map[string]int32{
	"Preprepare":  0,
	"Prepare":     1,
	"Commit":      2,
	"RoundChange": 3,
	"Decide":      4,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}

func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_952909143bb80d72, []int{0}
}

type Message struct {
	Type                 MsgType  `protobuf:"varint,1,opt,name=type,proto3,enum=ibft.v1alpha.MsgType" json:"type,omitempty"`
	Round                uint64   `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Lambda               []byte   `protobuf:"bytes,3,opt,name=lambda,proto3" json:"lambda,omitempty"`
	InputValue           []byte   `protobuf:"bytes,4,opt,name=input_value,json=inputValue,proto3" json:"input_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_952909143bb80d72, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetType() MsgType {
	if m != nil {
		return m.Type
	}
	return MsgType_Preprepare
}

func (m *Message) GetRound() uint64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *Message) GetLambda() []byte {
	if m != nil {
		return m.Lambda
	}
	return nil
}

func (m *Message) GetInputValue() []byte {
	if m != nil {
		return m.InputValue
	}
	return nil
}

func init() {
	proto.RegisterEnum("ibft.v1alpha.MsgType", MsgType_name, MsgType_value)
	proto.RegisterType((*Message)(nil), "ibft.v1alpha.Message")
}

func init() {
	proto.RegisterFile("msgs.proto", fileDescriptor_952909143bb80d72)
}

var fileDescriptor_952909143bb80d72 = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x41, 0x4b, 0xc4, 0x30,
	0x14, 0x84, 0xcd, 0x6e, 0xdd, 0xc2, 0xeb, 0xb2, 0x96, 0xa0, 0xd2, 0x9b, 0x55, 0x2f, 0xd5, 0x43,
	0x8b, 0xfa, 0x0f, 0x5c, 0xaf, 0x8b, 0x4b, 0x11, 0x0f, 0x5e, 0x24, 0xd9, 0x3e, 0xd3, 0x40, 0xd3,
	0x84, 0x24, 0x2d, 0xee, 0xd9, 0x3f, 0x2e, 0xa9, 0x3d, 0x78, 0xfc, 0x66, 0x86, 0xf7, 0x98, 0x01,
	0x50, 0x4e, 0xb8, 0xd2, 0x58, 0xed, 0x35, 0x5d, 0x4b, 0xfe, 0xe5, 0xcb, 0xf1, 0x81, 0x75, 0xa6,
	0x65, 0x37, 0x3f, 0x04, 0xe2, 0x1d, 0x3a, 0xc7, 0x04, 0xd2, 0x3b, 0x88, 0xfc, 0xd1, 0x60, 0x46,
	0x72, 0x52, 0x6c, 0x1e, 0x2f, 0xca, 0xff, 0xc1, 0x72, 0xe7, 0xc4, 0xdb, 0xd1, 0x60, 0x3d, 0x45,
	0xe8, 0x39, 0x9c, 0x5a, 0x3d, 0xf4, 0x4d, 0xb6, 0xc8, 0x49, 0x11, 0xd5, 0x7f, 0x40, 0x2f, 0x61,
	0xd5, 0x31, 0xc5, 0x1b, 0x96, 0x2d, 0x73, 0x52, 0xac, 0xeb, 0x99, 0xe8, 0x15, 0x24, 0xb2, 0x37,
	0x83, 0xff, 0x1c, 0x59, 0x37, 0x60, 0x16, 0x4d, 0x26, 0x4c, 0xd2, 0x7b, 0x50, 0xee, 0x5f, 0x21,
	0x9e, 0xef, 0xd3, 0x0d, 0xc0, 0xde, 0xa2, 0xb1, 0x68, 0x98, 0xc5, 0xf4, 0x84, 0x26, 0x10, 0xef,
	0x67, 0x20, 0x14, 0x60, 0xb5, 0xd5, 0x4a, 0x49, 0x9f, 0x2e, 0xe8, 0x19, 0x24, 0x75, 0xf8, 0xba,
	0x6d, 0x59, 0x2f, 0x30, 0x5d, 0x06, 0xf3, 0x05, 0x0f, 0xb2, 0xc1, 0x34, 0x7a, 0xbe, 0xfd, 0xb8,
	0x16, 0xd2, 0xb7, 0x03, 0x2f, 0x0f, 0x5a, 0x55, 0xbc, 0xd3, 0xdf, 0xcc, 0x98, 0xca, 0xb9, 0xb1,
	0x0a, 0xa5, 0xaa, 0xd0, 0xc1, 0xf1, 0xd5, 0x34, 0xc8, 0xd3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xeb, 0x13, 0x70, 0xa8, 0x1e, 0x01, 0x00, 0x00,
}
